#
# makefile
#

# set src, dst directory and flags for protobuf
PROTOC  = protoc
PBFLAGS = --cpp_out
PBSRC   = ./protos
PBDST   = ./message

# which c plus plus compiler
CPP     = c++
# which c compiler
CC      = cc
# options for compiler
CFLAGS  = -Wall -Werror -fPIC

# objects
OBJS    =		ccgs_module.o \
			ccgs_configure.o \
			ccgs_event_loop.o  \
			ccgs_recv_task.o  \
			ccgs_singleton.o \
			ccgs_db_connection.o \
			ccgs_manager.o \
			ccgs_send_task.o \
			ccgs_thread_pool.o \
			ccgs_utils.o \
			ccgs_memcached.o \
			ccgs_common.o
BINCCGS=ccgs
LIBCCGS=libccgs.so

# where are include files kept
INCDIRS	    = -I. -I./include -I/usr/local/include

# for Linker
LIBDIRS     = -L/usr/local/lib -L./

LIBS        = -lev \
              -lglog \
              -lmysqlcppconn \
              -llua-5.2 \
              -lmemcached \
              -lprotobuf \
              -lpthread \
              -lboost_system \
              -lboost_thread \
              -lboost_program_options \
              -lboost_filesystem \
              -lrt 
#              -ldl
# rock..

all: clean  libst.a precompile_protobuf ${LIBCCGS} $(BINCCGS)

libst.a:
	cd libst && make
# pre-compile protobuf
precompile_protobuf:
	$(PROTOC) $(PBFLAGS)=$(PBDST) $(PBSRC)/*

# build CCGS shared library.
${LIBCCGS}: ${OBJS}
	${CC} ${OBJS} -shared -fPIC -o ${LIBCCGS} ${LIBDIRS} ${LIBS} libst/libst.a

# how to compiling programs
$(BINCCGS):$(LIBCCGS)
	${CPP} $(INCDIRS) ${LIBDIRS} -lccgs -g ccgs.cpp -o $(BINCCGS)
#%.o:%.cpp
.cpp.o:
	$(CPP) $(CFLAGS) ${INCDIRS} -o $@ -c $<
#%.o:%.cc
.cc.o:
	$(CPP) $(CFLAGS) ${INCDIRS} -o $@ -c $<
%.o:%.c
	$(CC)  $(CFLAGS) ${INCDIRS} -o $@ -c $<

.PHONY: clean

clean:
	-rm -rf *.o $(BINCCGS) *~ logs .lock message/* ${LIBCCGS}
	cd ./libst/ && make clean
